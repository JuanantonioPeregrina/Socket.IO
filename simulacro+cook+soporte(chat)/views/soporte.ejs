<%- include('header', { title: 'Soporte', user: user }) %>

<div id="chat-container">
    <h1>Chat de Soporte</h1>
    <ul id="messages"></ul>
    <form id="chat-form">
        <input id="message-input" type="text" placeholder="Escribe tu mensaje..." required />
        <button type="submit">Enviar</button>
    </form>
</div>

<div id="guest-list">
    <h3>Invitados Activos</h3>
    <ul id="active-guests"></ul>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const role = '<%= user ? "admin" : "guest" %>';
    let currentRoom = null;

    socket.emit('joinSupport', role);

    document.getElementById('chat-form').addEventListener('submit', (e) => {
        e.preventDefault(); // Prevenir el refresco de la página

        const input = document.getElementById('message-input');
        const message = input.value;

        if (role === 'admin') {
            if (currentRoom) {
                socket.emit('sendMessage', { role, message, targetRoom: currentRoom });
                appendMessage(`Tú: ${message}`, 'self');
            } else {
                alert('Selecciona un invitado para enviar un mensaje.');
            }
        } else {
            socket.emit('sendMessage', { role, message });
            appendMessage(`Tú: ${message}`, 'self');
        }

        input.value = '';
    });

    if (role === 'admin') {
        socket.on('activeGuests', (guests) => {
            const guestList = document.getElementById('active-guests');
            guestList.innerHTML = '';
            for (const [socketId, username] of Object.entries(guests)) {
                const listItem = document.createElement('li');
                listItem.textContent = username;
                listItem.addEventListener('click', () => {
                    currentRoom = `guest-${socketId}`;
                    loadChatHistory(currentRoom);
                    socket.emit('requestChatHistory', currentRoom);
                });
                guestList.appendChild(listItem);
            }
        });

        socket.on('loadChatHistory', (messages) => {
            document.getElementById('messages').innerHTML = '';
            messages.forEach(({ sender, message }) => {
                appendMessage(`${sender}: ${message}`, 'other');
            });
        });
    }

    socket.on('receiveMessage', ({ sender, message }) => {
        appendMessage(`${sender}: ${message}`, 'other');
    });

    function loadChatHistory(room) {
        document.getElementById('messages').innerHTML = '';
        appendMessage(`Conversación con ${room}`, 'system');
    }

    function appendMessage(message, type) {
        const messages = document.getElementById('messages');
        const msgElement = document.createElement('li');
        msgElement.textContent = message;
        msgElement.className = type;
        messages.appendChild(msgElement);
    }
</script>

<%- include('footer') %>
