<%- include("header", {}) %>
<div class="container">
    <h1>Tienda</h1>
<div class="container">
    <h1>Tienda</h1>
    <p>Aquí puede encontrar nuestros mejores productos</p>

    <% productos.forEach(product => { %>
        <div>
            <h2><%= product.nombre %></h2>
            <p><%= product.descripcion %></p>
            <img src="<%= product.imagen %>" alt="Imagen de <%= product.nombre %>" width="500" height="500">
            <form method="POST" action="/carrito/add">
                <input type="hidden" name="productId" value="<%= product.id %>">
                <button type="submit">Añadir al carrito</button>
            </form>
        </div>
    <% }) %>
</div>

<%- include("footer", {}) %>



<%- include("footer", {}) %>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io({
        transports: ['websocket']
    });

    // Función para mostrar el área de comentarios
    function sendComment() {
    console.log('Botón "Enviar Comentario" presionado');
    const commentSection = document.getElementById('comment-section');
    if (commentSection) {
        console.log('Elemento encontrado:', commentSection);
        
        // Forzar repintado del DOM
        commentSection.style.display = 'block';
        commentSection.offsetHeight; // Forzar al navegador a recalcular el estilo
        console.log('Estilo cambiado a block y forzado repintado');
    } else {
        console.error('Elemento "comment-section" no encontrado');
    }
}


    // Función para enviar el comentario al servidor
    function submitComment() {
        const commentInput = document.getElementById('comment-input');
        const comment = commentInput.value.trim(); // Obtener el comentario del campo de texto
        if (comment) {
            console.log(`Comentario enviado: ${comment}`);
            socket.emit('sendComment', comment); // Emitir el comentario al servidor
            commentInput.value = ''; // Limpiar el campo de texto
            alert('Comentario enviado correctamente');
        } else {
            alert('Por favor, escribe un comentario antes de enviarlo.');
        }
    }

    // Escuchar el evento de comentarios en tiempo real
    socket.on('receiveComment', (comment) => {
        const notifications = document.getElementById('notifications');
        const notificationsList = document.getElementById('notifications-list');
        notifications.style.display = 'block';

        const notification = document.createElement('li');
        notification.textContent = `Nuevo comentario: ${comment}`;
        notification.style.padding = '10px';
        notification.style.borderBottom = '1px solid #ccc';

        notificationsList.appendChild(notification);

        // Hacer que la notificación desaparezca después de 5 segundos
        setTimeout(() => {
            notificationsList.removeChild(notification);
            if (notificationsList.children.length === 0) {
                notifications.style.display = 'none'; // Ocultar el área si no hay notificaciones
            }
        }, 5000);
    });

    socket.on('connect', () => {
        console.log('Conectado al servidor de Sockets.io');
    });

    socket.on('disconnect', () => {
        console.log('Desconectado del servidor');
    });
</script>
